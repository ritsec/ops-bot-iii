// Code generated by ent, DO NOT EDIT.

package voteresult

import (
	"entgo.io/ent/dialect/sql"
	"github.com/ritsec/ops-bot-iii/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldLTE(FieldID, id))
}

// HTML applies equality check predicate on the "html" field. It's identical to HTMLEQ.
func HTML(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldEQ(FieldHTML, v))
}

// Plain applies equality check predicate on the "plain" field. It's identical to PlainEQ.
func Plain(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldEQ(FieldPlain, v))
}

// VoteID applies equality check predicate on the "vote_id" field. It's identical to VoteIDEQ.
func VoteID(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldEQ(FieldVoteID, v))
}

// HTMLEQ applies the EQ predicate on the "html" field.
func HTMLEQ(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldEQ(FieldHTML, v))
}

// HTMLNEQ applies the NEQ predicate on the "html" field.
func HTMLNEQ(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldNEQ(FieldHTML, v))
}

// HTMLIn applies the In predicate on the "html" field.
func HTMLIn(vs ...string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldIn(FieldHTML, vs...))
}

// HTMLNotIn applies the NotIn predicate on the "html" field.
func HTMLNotIn(vs ...string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldNotIn(FieldHTML, vs...))
}

// HTMLGT applies the GT predicate on the "html" field.
func HTMLGT(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldGT(FieldHTML, v))
}

// HTMLGTE applies the GTE predicate on the "html" field.
func HTMLGTE(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldGTE(FieldHTML, v))
}

// HTMLLT applies the LT predicate on the "html" field.
func HTMLLT(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldLT(FieldHTML, v))
}

// HTMLLTE applies the LTE predicate on the "html" field.
func HTMLLTE(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldLTE(FieldHTML, v))
}

// HTMLContains applies the Contains predicate on the "html" field.
func HTMLContains(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldContains(FieldHTML, v))
}

// HTMLHasPrefix applies the HasPrefix predicate on the "html" field.
func HTMLHasPrefix(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldHasPrefix(FieldHTML, v))
}

// HTMLHasSuffix applies the HasSuffix predicate on the "html" field.
func HTMLHasSuffix(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldHasSuffix(FieldHTML, v))
}

// HTMLEqualFold applies the EqualFold predicate on the "html" field.
func HTMLEqualFold(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldEqualFold(FieldHTML, v))
}

// HTMLContainsFold applies the ContainsFold predicate on the "html" field.
func HTMLContainsFold(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldContainsFold(FieldHTML, v))
}

// PlainEQ applies the EQ predicate on the "plain" field.
func PlainEQ(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldEQ(FieldPlain, v))
}

// PlainNEQ applies the NEQ predicate on the "plain" field.
func PlainNEQ(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldNEQ(FieldPlain, v))
}

// PlainIn applies the In predicate on the "plain" field.
func PlainIn(vs ...string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldIn(FieldPlain, vs...))
}

// PlainNotIn applies the NotIn predicate on the "plain" field.
func PlainNotIn(vs ...string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldNotIn(FieldPlain, vs...))
}

// PlainGT applies the GT predicate on the "plain" field.
func PlainGT(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldGT(FieldPlain, v))
}

// PlainGTE applies the GTE predicate on the "plain" field.
func PlainGTE(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldGTE(FieldPlain, v))
}

// PlainLT applies the LT predicate on the "plain" field.
func PlainLT(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldLT(FieldPlain, v))
}

// PlainLTE applies the LTE predicate on the "plain" field.
func PlainLTE(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldLTE(FieldPlain, v))
}

// PlainContains applies the Contains predicate on the "plain" field.
func PlainContains(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldContains(FieldPlain, v))
}

// PlainHasPrefix applies the HasPrefix predicate on the "plain" field.
func PlainHasPrefix(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldHasPrefix(FieldPlain, v))
}

// PlainHasSuffix applies the HasSuffix predicate on the "plain" field.
func PlainHasSuffix(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldHasSuffix(FieldPlain, v))
}

// PlainEqualFold applies the EqualFold predicate on the "plain" field.
func PlainEqualFold(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldEqualFold(FieldPlain, v))
}

// PlainContainsFold applies the ContainsFold predicate on the "plain" field.
func PlainContainsFold(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldContainsFold(FieldPlain, v))
}

// VoteIDEQ applies the EQ predicate on the "vote_id" field.
func VoteIDEQ(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldEQ(FieldVoteID, v))
}

// VoteIDNEQ applies the NEQ predicate on the "vote_id" field.
func VoteIDNEQ(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldNEQ(FieldVoteID, v))
}

// VoteIDIn applies the In predicate on the "vote_id" field.
func VoteIDIn(vs ...string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldIn(FieldVoteID, vs...))
}

// VoteIDNotIn applies the NotIn predicate on the "vote_id" field.
func VoteIDNotIn(vs ...string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldNotIn(FieldVoteID, vs...))
}

// VoteIDGT applies the GT predicate on the "vote_id" field.
func VoteIDGT(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldGT(FieldVoteID, v))
}

// VoteIDGTE applies the GTE predicate on the "vote_id" field.
func VoteIDGTE(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldGTE(FieldVoteID, v))
}

// VoteIDLT applies the LT predicate on the "vote_id" field.
func VoteIDLT(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldLT(FieldVoteID, v))
}

// VoteIDLTE applies the LTE predicate on the "vote_id" field.
func VoteIDLTE(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldLTE(FieldVoteID, v))
}

// VoteIDContains applies the Contains predicate on the "vote_id" field.
func VoteIDContains(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldContains(FieldVoteID, v))
}

// VoteIDHasPrefix applies the HasPrefix predicate on the "vote_id" field.
func VoteIDHasPrefix(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldHasPrefix(FieldVoteID, v))
}

// VoteIDHasSuffix applies the HasSuffix predicate on the "vote_id" field.
func VoteIDHasSuffix(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldHasSuffix(FieldVoteID, v))
}

// VoteIDEqualFold applies the EqualFold predicate on the "vote_id" field.
func VoteIDEqualFold(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldEqualFold(FieldVoteID, v))
}

// VoteIDContainsFold applies the ContainsFold predicate on the "vote_id" field.
func VoteIDContainsFold(v string) predicate.VoteResult {
	return predicate.VoteResult(sql.FieldContainsFold(FieldVoteID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.VoteResult) predicate.VoteResult {
	return predicate.VoteResult(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.VoteResult) predicate.VoteResult {
	return predicate.VoteResult(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.VoteResult) predicate.VoteResult {
	return predicate.VoteResult(sql.NotPredicates(p))
}
